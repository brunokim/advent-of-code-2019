package main

import (
	"fmt"
	"strconv"
	"strings"
	"sync"

	"brunokim.xyz/advent-of-code-2019/intcode"
)

func parseInput(s string) []int {
	strs := strings.Split(s, ",")
	ints := make([]int, len(strs))
	for i, s := range strs {
		v, err := strconv.Atoi(s)
		if err != nil {
			panic(err.Error())
		}
		ints[i] = v
	}
	return ints
}

func day5() {
	c := intcode.NewComputer(parseInput(day5Input))
	c.Debug = true
	output, err := c.RunWith(5)
	if err != nil {
		fmt.Println(err)
		return
	}
	fmt.Println("Output:", output)
	fmt.Println(c)
}

func part1Instance(phases ...int) (int, error) {
	input := 0
	for i, phase := range phases {
		amp := intcode.NewComputer(parseInput(day7Input))
		outputs, err := amp.RunWith(phase, input)
		if err != nil {
			return 0, fmt.Errorf("Amp %d: %v", i+1, err)
		}
		if len(outputs) != 1 {
			return 0, fmt.Errorf("More than 1 output generated: %v", outputs)
		}
		input = outputs[0]
	}
	return input, nil
}

func permutations(xs []int) [][]int {
	if len(xs) == 1 {
		return [][]int{[]int{xs[0]}}
	}
	var cs [][]int
	for i, x := range xs {
		rest := make([]int, len(xs)-1)
		copy(rest, xs[:i])
		copy(rest[i:], xs[i+1:])
		for _, comb := range permutations(rest) {
			c := make([]int, len(comb)+1)
			copy(c, comb)
			c[len(comb)] = x
			cs = append(cs, c)
		}
	}
	return cs
}

type pipe struct {
	id        int
	lastInput int
	ch        chan int
}

func newPipe(id int) *pipe {
	return &pipe{
		id:        id,
		lastInput: -1,
		ch:        make(chan int, 1),
	}
}

func (p *pipe) NextInt() (int, bool) {
	i, ok := <-p.ch
	if !ok {
		return 0, false
	}
	return i, true
}

func (p *pipe) PushInt(i int) {
	p.lastInput = i
	p.ch <- i
}

func part2Instance(phases ...int) (int, error) {
	n := len(phases)
	pipes := make([]*pipe, n)
	amps := make([]*intcode.Computer, n)
	errs := make([]error, n)
	for i := 0; i < n; i++ {
		pipes[i] = newPipe(i + 1)
		amps[i] = intcode.NewComputer(parseInput(day7Input))
	}
	var wg sync.WaitGroup
	for i := 0; i < n; i++ {
		pipes[i].PushInt(phases[i])
		wg.Add(1)
		go func(i int) {
			defer wg.Done()
			errs[i] = amps[i].Run(pipes[i], pipes[(i+1)%n])
		}(i)
	}
	pipes[0].PushInt(0)
	wg.Wait()
	for i, err := range errs {
		if err != error(nil) {
			return 0, fmt.Errorf("Amp #%d: %v", i+1, err)
		}
	}
	for _, pipe := range pipes {
		close(pipe.ch)
	}
	output := pipes[0].lastInput
	return output, nil
}

func day7() {
	fmt.Println(part1Instance(4, 3, 2, 1, 0))
	fmt.Println(permutations([]int{1, 2, 3, 4}))
	maxOutput := -1
	for _, comb := range permutations([]int{0, 1, 2, 3, 4}) {
		output, err := part1Instance(comb...)
		if err != nil {
			panic(err.Error())
		}
		if output > maxOutput {
			maxOutput = output
			fmt.Println("Part 1:", output, comb)
		}
	}
	fmt.Println(part2Instance(9, 8, 7, 6, 5))
	for _, comb := range permutations([]int{5, 6, 7, 8, 9}) {
		output, err := part2Instance(comb...)
		if err != nil {
			panic(err.Error())
		}
		if output > maxOutput {
			maxOutput = output
			fmt.Println("Part 2:", output, comb)
		}
	}
}

const width, height = 25, 6

type layer [height][width]int

func (l layer) frequency() [3]int {
	var result [3]int
	for _, row := range l {
		for _, num := range row {
			result[num]++
		}
	}
	return result
}

func (l layer) String() string {
	colors := [3]rune{'\u2588', '\u2591', ' '}
	var b strings.Builder
	for _, row := range l {
		for _, num := range row {
			fmt.Fprintf(&b, "%c", colors[num])
		}
		fmt.Fprintf(&b, "\n")
	}
	return b.String()
}

func day8() {
	var layers []layer

	var currLayer layer
	var i, j int
	for _, digit := range day8Input {
		num := digit - '0'
		currLayer[i][j] = int(num)
		j++
		if j == width {
			j = 0
			i++
		}
		if i == height {
			i = 0
			layers = append(layers, currLayer)
		}
	}
	for _, layer := range layers {
		fmt.Println(layer.frequency())
		fmt.Println(layer)
	}
	var stacked layer
	for i := 0; i < height; i++ {
		for j := 0; j < width; j++ {
			for _, layer := range layers {
				if layer[i][j] != 2 {
					stacked[i][j] = layer[i][j]
					break
				}
			}
		}
	}
	fmt.Println(stacked)
}

func main() {
	day8()
}

const day2Input = `1,95,7,3,1,1,2,3,1,3,4,3,1,5,0,3,2,1,6,19,1,19,5,23,2,13,23,27,1,10,27,31,2,6,31,35,1,9,35,39,2,10,39,43,1,43,9,47,1,47,9,51,2,10,51,55,1,55,9,59,1,59,5,63,1,63,6,67,2,6,67,71,2,10,71,75,1,75,5,79,1,9,79,83,2,83,10,87,1,87,6,91,1,13,91,95,2,10,95,99,1,99,6,103,2,13,103,107,1,107,2,111,1,111,9,0,99,2,14,0,0`
const day5Input = `3,225,1,225,6,6,1100,1,238,225,104,0,1102,79,14,225,1101,17,42,225,2,74,69,224,1001,224,-5733,224,4,224,1002,223,8,223,101,4,224,224,1,223,224,223,1002,191,83,224,1001,224,-2407,224,4,224,102,8,223,223,101,2,224,224,1,223,224,223,1101,18,64,225,1102,63,22,225,1101,31,91,225,1001,65,26,224,101,-44,224,224,4,224,102,8,223,223,101,3,224,224,1,224,223,223,101,78,13,224,101,-157,224,224,4,224,1002,223,8,223,1001,224,3,224,1,224,223,223,102,87,187,224,101,-4698,224,224,4,224,102,8,223,223,1001,224,4,224,1,223,224,223,1102,79,85,224,101,-6715,224,224,4,224,1002,223,8,223,1001,224,2,224,1,224,223,223,1101,43,46,224,101,-89,224,224,4,224,1002,223,8,223,101,1,224,224,1,223,224,223,1101,54,12,225,1102,29,54,225,1,17,217,224,101,-37,224,224,4,224,102,8,223,223,1001,224,3,224,1,223,224,223,1102,20,53,225,4,223,99,0,0,0,677,0,0,0,0,0,0,0,0,0,0,0,1105,0,99999,1105,227,247,1105,1,99999,1005,227,99999,1005,0,256,1105,1,99999,1106,227,99999,1106,0,265,1105,1,99999,1006,0,99999,1006,227,274,1105,1,99999,1105,1,280,1105,1,99999,1,225,225,225,1101,294,0,0,105,1,0,1105,1,99999,1106,0,300,1105,1,99999,1,225,225,225,1101,314,0,0,106,0,0,1105,1,99999,107,226,226,224,1002,223,2,223,1006,224,329,101,1,223,223,1108,677,226,224,1002,223,2,223,1006,224,344,101,1,223,223,7,677,226,224,102,2,223,223,1006,224,359,101,1,223,223,108,226,226,224,1002,223,2,223,1005,224,374,101,1,223,223,8,226,677,224,1002,223,2,223,1006,224,389,101,1,223,223,1108,226,226,224,102,2,223,223,1006,224,404,101,1,223,223,1007,677,677,224,1002,223,2,223,1006,224,419,101,1,223,223,8,677,677,224,1002,223,2,223,1005,224,434,1001,223,1,223,1008,226,226,224,102,2,223,223,1005,224,449,1001,223,1,223,1008,226,677,224,102,2,223,223,1006,224,464,101,1,223,223,1107,677,677,224,102,2,223,223,1006,224,479,101,1,223,223,107,677,677,224,1002,223,2,223,1005,224,494,1001,223,1,223,1107,226,677,224,1002,223,2,223,1005,224,509,101,1,223,223,1108,226,677,224,102,2,223,223,1006,224,524,101,1,223,223,7,226,226,224,1002,223,2,223,1005,224,539,101,1,223,223,108,677,677,224,1002,223,2,223,1005,224,554,101,1,223,223,8,677,226,224,1002,223,2,223,1005,224,569,1001,223,1,223,1008,677,677,224,102,2,223,223,1006,224,584,101,1,223,223,107,226,677,224,102,2,223,223,1005,224,599,1001,223,1,223,7,226,677,224,102,2,223,223,1005,224,614,101,1,223,223,1007,226,226,224,1002,223,2,223,1005,224,629,101,1,223,223,1107,677,226,224,1002,223,2,223,1006,224,644,101,1,223,223,108,226,677,224,102,2,223,223,1006,224,659,101,1,223,223,1007,677,226,224,102,2,223,223,1006,224,674,101,1,223,223,4,223,99,226`
const day7Input = `3,8,1001,8,10,8,105,1,0,0,21,42,67,84,97,118,199,280,361,442,99999,3,9,101,4,9,9,102,5,9,9,101,2,9,9,1002,9,2,9,4,9,99,3,9,101,5,9,9,102,5,9,9,1001,9,5,9,102,3,9,9,1001,9,2,9,4,9,99,3,9,1001,9,5,9,1002,9,2,9,1001,9,5,9,4,9,99,3,9,1001,9,5,9,1002,9,3,9,4,9,99,3,9,102,4,9,9,101,4,9,9,102,2,9,9,101,3,9,9,4,9,99,3,9,102,2,9,9,4,9,3,9,1002,9,2,9,4,9,3,9,1001,9,2,9,4,9,3,9,102,2,9,9,4,9,3,9,102,2,9,9,4,9,3,9,1001,9,2,9,4,9,3,9,1002,9,2,9,4,9,3,9,102,2,9,9,4,9,3,9,1001,9,2,9,4,9,3,9,101,2,9,9,4,9,99,3,9,1001,9,1,9,4,9,3,9,101,2,9,9,4,9,3,9,1001,9,2,9,4,9,3,9,1002,9,2,9,4,9,3,9,101,2,9,9,4,9,3,9,1002,9,2,9,4,9,3,9,102,2,9,9,4,9,3,9,1002,9,2,9,4,9,3,9,101,1,9,9,4,9,3,9,101,2,9,9,4,9,99,3,9,101,1,9,9,4,9,3,9,1001,9,1,9,4,9,3,9,1002,9,2,9,4,9,3,9,1002,9,2,9,4,9,3,9,1002,9,2,9,4,9,3,9,1001,9,2,9,4,9,3,9,102,2,9,9,4,9,3,9,102,2,9,9,4,9,3,9,101,2,9,9,4,9,3,9,1001,9,2,9,4,9,99,3,9,102,2,9,9,4,9,3,9,102,2,9,9,4,9,3,9,1001,9,2,9,4,9,3,9,102,2,9,9,4,9,3,9,1001,9,2,9,4,9,3,9,102,2,9,9,4,9,3,9,102,2,9,9,4,9,3,9,101,1,9,9,4,9,3,9,1001,9,2,9,4,9,3,9,1002,9,2,9,4,9,99,3,9,101,1,9,9,4,9,3,9,101,1,9,9,4,9,3,9,102,2,9,9,4,9,3,9,1001,9,2,9,4,9,3,9,1001,9,2,9,4,9,3,9,1002,9,2,9,4,9,3,9,101,1,9,9,4,9,3,9,102,2,9,9,4,9,3,9,1001,9,1,9,4,9,3,9,1001,9,2,9,4,9,99`
const day8Input = ``
